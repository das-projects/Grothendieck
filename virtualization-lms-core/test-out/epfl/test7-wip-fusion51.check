-- full graph
TP(Sym(1),Reflect(Print(Const(1)),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List()))
TP(Sym(2),Reflect(NewVar(Const(0)),Summary(false,false,false,false,true,false,List(),List(),List(),List()),List()))
TP(Sym(4),IntPlus(Sym(3),Const(2)))
TP(Sym(5),SingletonInLoop(Sym(4),Sym(3)))
TP(Sym(6),SimpleLoop(Const(100),Sym(3),MultiArrayElem(Block(Sym(5)))))
TP(Sym(8),ArrayIndex(Sym(6),Sym(7)))
TP(Sym(9),Reflect(Assign(Variable(Sym(2)),Sym(8)),Summary(false,false,false,false,false,false,List(Sym(2)),List(Sym(2)),List(Sym(2)),List(Sym(2))),List(Sym(2))))
TP(Sym(10),IntPlus(Sym(8),Const(3)))
TP(Sym(11),Reflect(Print(Sym(10)),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List(Sym(1))))
TP(Sym(12),Reify(Sym(11),Summary(true,true,false,false,false,false,List(Sym(2)),List(Sym(2)),List(Sym(2)),List(Sym(2))),List(Sym(9), Sym(11))))
TP(Sym(13),ArrayLength(Sym(6)))
TP(Sym(14),Reflect(SimpleLoop(Sym(13),Sym(7),ForeachElem(Block(Sym(12)))),Summary(true,false,false,false,false,false,List(Sym(2)),List(),List(Sym(2)),List()),List(Sym(1), Sym(2))))
TP(Sym(15),Reflect(Print(Const(4)),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List(Sym(14))))
TP(Sym(16),Reflect(ReadVar(Variable(Sym(2))),Summary(false,false,false,false,false,false,List(Sym(2)),List(Sym(2)),List(),List()),List(Sym(2), Sym(14))))
TP(Sym(17),Reflect(Print(Sym(16)),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List(Sym(15))))
TP(Sym(18),Reify(Sym(17),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List(Sym(1), Sym(2), Sym(14), Sym(15), Sym(16), Sym(17))))

-- before transformation
val x1 = println(1)
var x2: Int = 0
val x6 = new Array[Int](100)
for (x3 <- 0 until 100) {
val x4 = x3 + 2
x6(x3) = x4
}
val x13 = x6.length
for (x7 <- 0 until x13) {
val x8 = x6.apply(x7)
val x9 = x2 = x8
val x10 = x8 + 3
val x11 = println(x10)
}
val x14 = ()
val x15 = println(4)
val x16 = x2
val x17 = println(x16)

-- vertical transformation

(VFT) No producers found for cons Sym(6)
(VFT) Replaced TP(Sym(13),ArrayLength(Sym(6))) with fixed length: Const(100)

(VFT) Fusing prod Sym(6) with cons Sym(14). Type: Mc_McForRed(Sym(7),Sym(3),Sym(13),Const(100),Single_McFor(Sym(7),(Sym(6),Sym(7)),Sym(4),Sym(12),Sym(5),Sym(14)),Sym(12),Sym(5),Sym(6),Sym(14))
(VFT) Fused prod Sym(6) with cons Sym(14), fused sym: Sym(25)

(VFT) all vertically fused: List(Sym(6), Sym(25))

-- after vertical transformation
val x19 = println(1)
var x20: Int = 0
for (x3 <- 0 until 100) {
val x4 = x3 + 2
val x21 = x20 = x4
val x22 = x4 + 3
val x23 = println(x22)
}
val x25 = ()
val x26 = println(4)
val x27 = x20
val x28 = println(x27)

-- horizontal transformation
(HFT) Recording Sym(25), no fusion
(HFT) - new loop symbol: Sym(25) -> Sym(35)

(HFT) all horizontally fused: 

-- after horizontal transformation
val x30 = println(1)
var x31: Int = 0
for (x3 <- 0 until 100) {
val x4 = x3 + 2
val x32 = x31 = x4
val x22 = x4 + 3
val x33 = println(x22)
}
val x35 = ()
val x36 = println(4)
val x37 = x31
val x38 = println(x37)

-- fusion
val x30 = println(1)
var x31: Int = 0
for (x3 <- 0 until 100) {
val x4 = x3 + 2
val x32 = x31 = x4
val x22 = x4 + 3
val x33 = println(x22)
}
val x35 = ()
val x36 = println(4)
val x37 = x31
val x38 = println(x37)
-- done
