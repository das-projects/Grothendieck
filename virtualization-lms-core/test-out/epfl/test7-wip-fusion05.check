-- full graph
TP(Sym(2),IntPlus(Sym(1),Const(1)))
TP(Sym(3),IntTimes(Sym(2),Sym(1)))
TP(Sym(4),IntTimes(Sym(1),Sym(3)))
TP(Sym(5),SingletonInLoop(Sym(4),Sym(1)))
TP(Sym(6),SimpleLoop(Const(100),Sym(1),MultiArrayElem(Block(Sym(5)))))
TP(Sym(7),ArrayLength(Sym(6)))
TP(Sym(9),IntPlus(Sym(8),Const(1)))
TP(Sym(10),ArrayIndex(Sym(6),Sym(9)))
TP(Sym(11),SingletonInLoop(Sym(10),Sym(8)))
TP(Sym(12),SimpleLoop(Sym(7),Sym(8),MultiArrayElem(Block(Sym(11)))))
TP(Sym(13),ArrayLength(Sym(12)))
TP(Sym(14),Reflect(Print(Sym(13)),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List()))
TP(Sym(15),Reify(Sym(14),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List(Sym(14))))

-- before transformation
val x6 = new Array[Int](100)
for (x1 <- 0 until 100) {
val x2 = x1 + 1
val x3 = x2 * x1
val x4 = x1 * x3
x6(x1) = x4
}
val x7 = x6.length
val x12 = new Array[Int](x7)
for (x8 <- 0 until x7) {
val x9 = x8 + 1
val x10 = x6.apply(x9)
x12(x8) = x10
}
val x13 = x12.length
val x14 = println(x13)

-- vertical transformation

(VFT) No producers found for cons Sym(6)
(VFT) Replaced TP(Sym(7),ArrayLength(Sym(6))) with fixed length: Const(100)

(VFT) No producers found for cons Sym(12)
(VFT) Cons Sym(12) not fused but mirrored to Sym(18) because of fixed shape
(VFT) Replaced TP(Sym(13),ArrayLength(Sym(12))) with fixed length: Const(100)

(VFT) all vertically fused: 

-- after vertical transformation
val x19 = println(100)

-- horizontal transformation

(HFT) all horizontally fused: 

-- after horizontal transformation
val x21 = println(100)

-- fusion
val x21 = println(100)
-- done
